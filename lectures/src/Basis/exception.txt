% Informatique - Java
% Nicolas Rousset 
% Gestion des exceptions

# Java - exceptions

## Rappel sur le Runtime VS Compilation

Il y a deux étapes à bien distinguer en java, la **compilation** et le **runtime**. 

Simplement la première désigne le fait de transformer votre code source en code exécutable, 
le deuxième le moment où votre programme est effectivement exécuté.  

Les erreurs dans la première partie sont liées à des problèmes de syntaxe ou de typages 
incohérents; elles sont levées directement par le compilateur, et sont faciles à traiter
(si votre code n'est pas trop mal structuré).  

Les erreurs dans la deuxième partie sont liées aux valeurs des variables : elles ne sont
donc pas détectable à priori par le compilateur. Le compilateur ne peut, par exemple, 
détecter systématiquement si une variable est bien initialisée avant que l'on ne fasse 
appel à elle.

Ici, erreur doit bien s'entendre comme une opération qui n'est pas possible, par exemple
appeler une méthode sur un objet **null* accéder à un élément qui n'existe pas dans une liste,
diviser par 0, etc ...

Les opérations qui ne produisent pas le bon résultat sont encore plus problématiques,
car plus difficiles à détecter. C'est pour cela que l'on choisira parfois de lever une 
exception (voir plus loin), ie que la fonction se comporte comme si elle ne pouvait pas 
produire le résultat

# Définition d'une exception

Une exception, comme son nom l'indique, est créée lorsqu'une opération impossible du fait 
des valeurs des variables est tentée. 
 
On interrompt alors le code exécutant, et on gère cette anomalie.  

**Les exceptions ne doivent pas servir à cacher des erreurs de programmation**  

Au contraire, on rajoutera des exceptions pour tenir compte de ce qui a été supposé, 
afin de mieux détecter certains comportements incohérents.

## Cas d'usage des exceptions  

Les principaux cas d'usage des exceptions concernent la lecture de données externes ; lorsque
vous lisez un fichier supposé être d'un certain format, que se passe-t-il si le fichier ne 
correspond pas ? Si il y a des lettres là où il devrait y avoir des chiffres ?  

Le programme lève alors une exception.  

Normalement si votre programme ne dépend pas du tout des données externes (ce qui serait en 
fait un peu étrange, il renverrait toujours le même résultat à chaque exécution) vous n'avez
pas besoin d'exception.  

# Exception usuelles




